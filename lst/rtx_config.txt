; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\rtx_config.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\rtx_config.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork -O1 -I.\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Freescale\Kinetis -D__RTX -D__MICROLIB -DMKL25Z128xxx4 --omf_browse=.\obj\rtx_config.crf src\RTX_Config.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  os_idle_demon PROC
                  |L1.0|
;;;147    
;;;148    __task void os_idle_demon (void) {
000000  e7fe              B        |L1.0|
;;;149      /* The idle demon is a system task, running when no other task is ready */
;;;150      /* to run. The 'os_xxx' function calls are not allowed from this task.  */
;;;151    
;;;152      for (;;) {
;;;153      /* HERE: include optional user code to be executed when no task runs.*/
;;;154      }
;;;155    }
;;;156    
                          ENDP

                  os_tmr_call PROC
;;;177    
;;;178    void os_tmr_call (U16 info) {
000002  4770              BX       lr
;;;179      /* This function is called when the user timer has expired. Parameter   */
;;;180      /* 'info' holds the value, defined when the timer was created.          */
;;;181    
;;;182      /* HERE: include optional user code to be executed on timeout. */
;;;183    }
;;;184    
                          ENDP

                  os_error PROC
                  |L1.4|
;;;187    
;;;188    void os_error (U32 err_code) {
000004  e7fe              B        |L1.4|
;;;189      /* This function is called when a runtime error is detected. Parameter */
;;;190      /* 'err_code' holds the runtime error code (defined in RTL.H).         */
;;;191    
;;;192      /* HERE: include optional code to be executed on runtime error. */
;;;193      for (;;);
;;;194    }
;;;195    
                          ENDP

                  rt_init_robin PROC
;;;359    #if (__CM__) && OS_ROBIN == 0
;;;360     void rt_init_robin (void) {;}
000006  4770              BX       lr
;;;361     void rt_chk_robin  (void) {;}
                          ENDP

                  rt_chk_robin PROC
000008  4770              BX       lr
;;;362    #endif
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  mp_tcb
                          %        404

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=3

                          EXPORTAS ||area_number.4||, ||.bss||
                  mp_stk
                          %        1808

                          AREA ||area_number.5||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.bss||
                  os_fifo
                          %        132

                          AREA ||area_number.6||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.bss||
                  os_active_TCB
                          %        28

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  os_maxtaskrun
000000  0007              DCW      0x0007

                          AREA ||area_number.9||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.constdata||
                  os_stackinfo
                          DCD      0x01010100

                          AREA ||area_number.10||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.constdata||
                  os_rrobin
                          DCD      0x000003e8

                          AREA ||area_number.11||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.constdata||
                  os_trv
                          DCD      0x0000bb7f

                          AREA ||area_number.12||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.12||, ||.constdata||
                  os_flags
000000  01                DCB      0x01

                          AREA ||area_number.13||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.constdata||
                  os_clockrate
                  ||__tagsym$$used||
                          DCD      0x000003e8
                  os_timernum
                  |symbol_number.21|
                          DCD      0x00000000

                          AREA ||area_number.14||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.constdata||
                  mp_tcb_size
000000  0194              DCW      0x0194

                          AREA ||area_number.15||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.constdata||
                  mp_stk_size
                          DCD      0x00000710

                          AREA ||area_number.16||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.constdata||
                  os_fifo_size
000000  10                DCB      0x10

                          AREA ||area_number.17||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.constdata||
                  mp_tmr_size
000000  0000              DCW      0x0000

                          AREA ||.data||, DATA, ALIGN=2

                  m_tmr
                          DCD      0x00000000
